default_platform(:ios)

platform :ios do
  before_all do 
    import "./Fastfile.Utils.Crypto"
  end
  desc "Description of what the lane does"
  lane :custom_lane do
    # add actions here: https://docs.fastlane.tools/actions
  end

  lane :match_decrypt do
    match_decrypt_repo
  end

  lane :match_encrypt do
    match_encrypt_repo
  end

 lane :deploy_firebase do

  match(
    git_url: "git@gitlab.com:Ivizey/matchdata.git",
    app_identifier: "com.masters-academy.JSONMusic",
    readonly: true,
    username: "maxim.savisko@gmail.com",
    storage_mode: "git",
    type: "development"
  )

  cocoapods(
    use_bundle_exec: true,
    try_repo_update_on_error: true
  )

  gym(
    scheme: "JSONMusic",
    export_method: "ad-hoc"
  )

  firebase_app_distribution(
    app: "1:591528737494:ios:5c6406deafdccd26a72777",
    testers: "ivizey@gmail.com",
    release_notes: "Test upload ipa file"
  )

  end

  lane :tests do
    scan(
      clean: true,
      code_coverage: true,
      scheme: "JSONMusic",
      skip_slack: true
    )
  end

  desc "Get cert ID for manual encrypt for match"
  lane :get_cert_id do

      itunes_connect_email = ""#ENV["DELIVER_USER"]
      if itunes_connect_email == nil
          UI.crash! "Could not find variable for DELIVER_USER. Pls define it in CI Variables or bash_profile"
      end

      fastlane_require 'spaceship'
      Spaceship.login(itunes_connect_email)
      Spaceship.select_team
      Spaceship.certificate.all.each do |cert|
      cert_type = Spaceship::Portal::Certificate::CERTIFICATE_TYPE_IDS[cert.type_display_id].to_s.split("::")[-1]
      puts "Cert id: #{cert.id}, name: #{cert.name}, expires: #{cert.expires.strftime("%Y-%m-%d")}, type: #{cert_type}"
      end
  end
end
